/**
 * CSS Positions
 * CSS3 Flex
 * CSS3 Display Model
 */

/*
 * CSS Position
 */
.layer {
	/*
	 * position 속성
	 * 속성값 :
	 * relative, 상대적인
	 * absolute, 절대적인
	 * static, 정적인 (기본값, 기본적으로는 left, top, right, bottom, z-index 사용 불가)
	 * fixed, 고정된
	 * sticky (라는 것도 존재하나, 브라우저 지원율이 낮아 실효성이 떨어짐)
	 * position 속성을 이용해서 좌표로 요소를 위치시킨다.
	   (coordinate system을 사용한다)
	 * 기본적으로는 좌표 기준이 브라우저가 기준
	 * position 속성이 존재하며, 속성값이 absolute인 경우 :
	 	 * position 속성이 존재하는 자손요소가 position 속성이 존재하지 않는 조상요소를 가지는 경우 브라우저가 기준
		 * position 속성이 존재하는 자손요소가 poisition 속성이 존재하는 조상요소를 가지는 경우, 해당 조상요소가 기준
	 * position 속성이 존재하며, 속성값이 fixed인 경우 :
	   * 브라우저를 기준으로, 해당 위치에 고정됨
	 * position 속성이 존재하며, 속성값이 relative인 경우 :
	   * 자기 자신을 기준으로, 해당 위치만큼 이동함
		 * margin을 넣은것과 굉장히 유사하게 보임
	 */

	 /*
	  * left 속성
		* top 속성
		* right 속성
		* bottom 속성
		* position될 요소의 좌표를 나타냄.
		* 속성값 :
		* <length> 단위
		* px, %, em, rem, (vw, vh, vmax, vmin)
		* 참고자료 : http://techhtml.github.io/TR/
		*/

		/*
		 * z-index
		 * coordinate system을 이용하는 (position 속성이 정의된) 요소의 z축을 지정
		 * 속성값 : <number>
		 * z-index 값이 높은 게 낮은 것보다 앞에 있음
		 */
}

/*
<body>
<div class="a">
	<div class="b">
		<div class="c">
			<div class="d"></div>
		</div>
	</div>
</div>
</body>
*/

.b {
	position: relative;
}

.a .b .c .d {
	position: absolute;
	left: 0;
	top: 0;
}

/*
 * HTML 예제
 */
 body {
	 height: 2000px;
 }
.pos-box {
	position: absolute;
	left: 150px;
	top: 150px;
}
.purple-box {
	position: relative;
	width: 150px;
	height: 150px;
	color: white;
	background: violet;
}
.red-box {
	width: 50px;
	height: 50px;
	color: white;
	background: crimson;
	z-index: 3;
}
.blue-box {
	width: 50px;
	height: 50px;
	color: white;
	background: skyblue;
	z-index: 5;
}
.gold-box {
	width: 50px;
	height: 50px;
	color: white;
	background: gold;
	z-index:1;
}

/**
 * [       header : 브라우저에 고정       ]
 * [ side menu ] [ main ] [ side menu ]
 * [             footer               ]
 * 이 레이아웃을 position 속성을 이용해서 구현해보세요
 * 시간은 10분
 */
